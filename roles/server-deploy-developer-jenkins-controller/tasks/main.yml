---

#FIXME BA-1448   - include: jenkins-user.yml

# Add graphiz package for displaying dependency graphs
- name: Install graphiz for jenkins dependency graphs
  yum: name=graphviz state=latest

- name: Add Jenkins controller repository for debugging jenkins
  yum_repository:
    name: jenkins
    description: Jenkins YUM repo
    baseurl: http://pkg.jenkins-ci.org/redhat
    gpgcheck: no

# Jenkins for the develop builds is actually a tad older - 1.643
- name: Install Jenkins
  yum: name={{ item }} state=present
  with_items:
    - jenkins-1.658-1.1
    - java-1.8.0-openjdk.x86_64
  tags:
    - jenkins-install

- name: Start Jenkins and set it start as system boots
  service:
    name: jenkins
    state: started
    enabled: yes

- name: Wait for Jenkins to start up before proceeding.
  shell: "curl -D - --silent --max-time 5 http://localhost:8080/cli/"
  register: result
  until: (result.stdout.find("403 Forbidden") != -1) or (result.stdout.find("200 OK") != -1) and (result.stdout.find("Please wait while") == -1)
  retries: "10"
  delay: "5"
  changed_when: false

#  - name: Poke a hole in the firewall so we can see Jenkins UI.
#    firewalld: port: 8080/tcp permanent: true state: enabled
#- name: FIXME Disable guest OS firewall so jenkins can be used.
#  service:
#    name: iptables
#    enabled: no
#    state: stopped

- name: Install plugins and Restart jenkins
  command: java -jar /var/cache/jenkins/war/WEB-INF/jenkins-cli.jar -s http://localhost:8080/ install-plugin {{ item }}
  args:
    creates: "/var/lib/jenkins/plugins/{{ item }}.jpi"
  with_items:
   - build-environment
   - configurationslicing
   - depgraph-view
   - cloudbees-folder
   - git
   - groovy
   - groovy-postbuild
   - jobConfigHistory
   - multiple-scms
   - parameterized-trigger
   - ws-cleanup
   - copyartifact
   - postbuild-task
  notify: restart jenkins
